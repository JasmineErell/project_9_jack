function Grid.new 0
    push constant 3
    call Memory.alloc 1
    pop pointer 0
    push argument 0
    pop this 2
    push constant 512
    push constant 2
    call Math.divide 2
    push constant 3
    push this 2
    call Math.multiply 2
    push constant 2
    call Math.divide 2
    sub
    pop this 0
    push constant 256
    push constant 2
    call Math.divide 2
    push constant 3
    push this 2
    call Math.multiply 2
    push constant 2
    call Math.divide 2
    sub
    pop this 1
    push pointer 0
    return
function Grid.draw 8
    push argument 0
    pop pointer 0
    push constant 1
    neg
    call Screen.setColor 1
    pop temp 0
    push constant 0
    pop local 0
label Grid_0
    push local 0
    push constant 4
    lt
    not
    if-goto Grid_1
    push this 0
    push local 0
    push this 2
    call Math.multiply 2
    add
    pop local 3
    push this 1
    pop local 4
    push local 3
    pop local 5
    push this 1
    push constant 3
    push this 2
    call Math.multiply 2
    add
    pop local 6
    push local 3
    push local 4
    push local 5
    push local 6
    call Screen.drawLine 4
    pop temp 0
    push local 0
    push constant 1
    add
    pop local 0
    goto Grid_0
label Grid_1
    push constant 0
    pop local 0
label Grid_2
    push local 0
    push constant 4
    lt
    not
    if-goto Grid_3
    push this 0
    pop local 3
    push this 1
    push local 0
    push this 2
    call Math.multiply 2
    add
    pop local 4
    push this 0
    push constant 3
    push this 2
    call Math.multiply 2
    add
    pop local 5
    push local 4
    pop local 6
    push local 3
    push local 4
    push local 5
    push local 6
    call Screen.drawLine 4
    pop temp 0
    push local 0
    push constant 1
    add
    pop local 0
    goto Grid_2
label Grid_3
    push constant 1
    pop local 7
    push constant 0
    pop local 1
label Grid_4
    push local 1
    push constant 3
    lt
    not
    if-goto Grid_5
    push constant 0
    pop local 2
label Grid_6
    push local 2
    push constant 3
    lt
    not
    if-goto Grid_7
    push pointer 0
    push local 1
    push local 2
    push local 7
    call Grid.writeNumber 4
    pop temp 0
    push local 7
    push constant 1
    add
    pop local 7
    push local 2
    push constant 1
    add
    pop local 2
    goto Grid_6
label Grid_7
    push local 1
    push constant 1
    add
    pop local 1
    goto Grid_4
label Grid_5
    push constant 0
    return
function Grid.writeNumber 2
    push argument 0
    pop pointer 0
    push this 1
    push argument 1
    push this 2
    call Math.multiply 2
    add
    push this 2
    push constant 2
    call Math.divide 2
    add
    push constant 11
    call Math.divide 2
    pop local 0
    push this 0
    push argument 2
    push this 2
    call Math.multiply 2
    add
    push this 2
    push constant 2
    call Math.divide 2
    add
    push constant 8
    call Math.divide 2
    pop local 1
    push local 0
    push local 1
    call Output.moveCursor 2
    pop temp 0
    push argument 3
    call Output.printInt 1
    pop temp 0
    push constant 0
    return
function Grid.getXValue 3
    push argument 0
    pop pointer 0
    push argument 1
    push constant 1
    sub
    push constant 3
    call Math.divide 2
    pop local 0
    push argument 1
    push constant 1
    sub
    push local 0
    push constant 3
    call Math.multiply 2
    sub
    pop local 1
    push this 0
    push local 1
    push this 2
    call Math.multiply 2
    add
    push this 2
    push constant 2
    call Math.divide 2
    add
    pop local 2
    push local 2
    return
function Grid.getYValue 2
    push argument 0
    pop pointer 0
    push argument 1
    push constant 1
    sub
    push constant 3
    call Math.divide 2
    pop local 0
    push this 1
    push local 0
    push this 2
    call Math.multiply 2
    add
    push this 2
    push constant 2
    call Math.divide 2
    add
    pop local 1
    push local 1
    return
function Grid.clearCell 4
    push argument 0
    pop pointer 0
    push argument 1
    push constant 1
    sub
    push constant 3
    call Math.divide 2
    pop local 0
    push argument 1
    push constant 1
    sub
    push local 0
    push constant 3
    call Math.multiply 2
    sub
    pop local 1
    push this 1
    push local 0
    push this 2
    call Math.multiply 2
    add
    push this 2
    push constant 2
    call Math.divide 2
    add
    push constant 11
    call Math.divide 2
    pop local 2
    push this 0
    push local 1
    push this 2
    call Math.multiply 2
    add
    push this 2
    push constant 2
    call Math.divide 2
    add
    push constant 8
    call Math.divide 2
    pop local 3
    push local 2
    push local 3
    call Output.moveCursor 2
    pop temp 0
    push constant 1
    call String.new 1
    push constant 32
    call String.appendChar 2
    call Output.printString 1
    pop temp 0
    push constant 0
    return
function Grid.dispose 0
    push argument 0
    pop pointer 0
    push pointer 0
    call Memory.deAlloc 1
    pop temp 0
    push constant 0
    return